name: test

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    container: docker://hexpm/erlang:23.1.1-alpine-3.12.0
    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_PASSWORD: postgres
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v2.0.0
      - run: echo "`pwd`/bin" >> $GITHUB_PATH

      - name: Handle gleam and rebar3 installation caching
        id: cache-gleam-rebar3
        uses: actions/cache@v1
        with:
          path: bin
          key: 0.12.0

      - name: Install gleam and rebar3
        if: steps.cache-gleam-rebar3.outputs.cache-hit != 'true'
        run: |
          apk add curl tar
          GLEAM_VERSION=0.12.0 eval 'curl -Lo bin/gleam.tar.gz "https://github.com/gleam-lang/gleam/releases/download/v$GLEAM_VERSION/gleam-v$GLEAM_VERSION-linux-amd64.tar.gz"'
          tar -xf bin/gleam.tar.gz -C bin
          rm bin/gleam.tar.gz
          curl -Lo bin/rebar3 https://s3.amazonaws.com/rebar3/rebar3
          chmod +x bin/rebar3

      - name: Handle deps caching
        id: cache-deps
        uses: actions/cache@v1
        with:
          path: _build
          key: 0.12.0-${{ hashFiles('rebar.lock') }}

      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: rebar3 get-deps

      - name: Tests
        run: rebar3 eunit
        env:
          POSTGRES_HOST: postgres

      - name: Check code formatting
        if: ${{ always() }}
        run: gleam format --check src test
